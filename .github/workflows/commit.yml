name: Commit checks

on: [push, pull_request]

env:
  NODE_VERSION: '14'

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Show versions
      run: |
        echo "Node $(node --version)"
        echo "NPM $(npm --version)"

    - name: Install node packages
      run: |
        npm install -g gulp
        npm install

    - name: Run lint checks
      run: |
        gulp lint

  jest-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: pixelbin
          POSTGRES_PASSWORD: pixelbin
          POSTGRES_DB: pixelbin_test
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      minio:
        image: minio/minio
        env:
          MINIO_ACCESS_KEY: AKIAIOSFODNN7EXAMPLE
          MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        ports:
          - 9000:9000
        options: >-
          --entrypoint "/usr/bin/docker-entrypoint.sh minio server /data"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install ffmpeg

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Show versions
      run: |
        node --version
        npm --version

    - name: Install node packages
      run: |
        npm install -g gulp
        npm install

    - name: Run tests
      run: |
        gulp testClientJest
        gulp testServer

    - name: Upload code coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        bash <(curl -s https://codecov.io/bash) -f coverage/coverage-final.json -F jest

  karma-tests:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2-beta
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Show versions
      run: |
        node --version
        npm --version

    - name: Install node packages
      run: |
        npm install -g gulp
        npm install

    - name: Run tests
      run: |
        gulp testClientKarma

    - name: Upload code coverage
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        bash <(curl -s https://codecov.io/bash) -f coverage/coverage-final.json -F karma
